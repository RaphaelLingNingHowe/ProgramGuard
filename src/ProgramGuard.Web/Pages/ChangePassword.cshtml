@page
@model ProgramGuard.Web.Pages.ChangePasswordModel
@{
}

<h1>Change Password</h1>

@using (Html.BeginForm(FormMethod.Post))
{
    <div class="dx-field">
        <div class="dx-field-label">賬號</div>
        <div class="dx-field-value">
            @(Html.DevExtreme().TextBoxFor(m => m.changePasswordDto.UserName)
                .Placeholder("Enter Username")
                )
        </div>
    </div>
    <div class="dx-field">
        <div class="dx-field-label">密碼</div>
        <div class="dx-field-value">
            @(
                Html.DevExtreme().TextBoxFor(m => m.changePasswordDto.CurrentPassword)
                .ID("Password")
                .Mode(TextBoxMode.Password)
                .InputAttr("aria-label", "Password")
                .Placeholder("現在使用的密碼")
                .ShowClearButton(true)
                .Buttons(buttons =>
                {
                    buttons.Add()
                    .Name("password")
                    .Location(TextEditorButtonLocation.After)
                    .Widget(w => w.Button()
                    .StylingMode(ButtonStylingMode.Text)
                    .Icon("eyeopen")
                    .OnClick("() => changePasswordMode('Password')"));
                }))
        </div>
    </div>
    <div class="dx-field">
        <div class="dx-field-label">新密碼</div>
        <div class="dx-field-value">
            @(
                Html.DevExtreme().TextBoxFor(m => m.changePasswordDto.NewPassword)
                .ID("NewPassword")
                .Mode(TextBoxMode.Password)
                .InputAttr("aria-label", "Password")
                .Placeholder("新密碼")
                .ShowClearButton(true)
                .Buttons(buttons =>
                {
                    buttons.Add()
                    .Name("password")
                    .Location(TextEditorButtonLocation.After)
                    .Widget(w => w.Button()
                    .StylingMode(ButtonStylingMode.Text)
                    .Icon("eyeopen")
                    .OnClick("() => changePasswordMode('NewPassword')"));
                }))
        </div>
    </div>
    <div class="dx-field">
        <div class="dx-field-label">確認新密碼</div>
        <div class="dx-field-value">
            @(
                Html.DevExtreme().TextBoxFor(m => m.changePasswordDto.ConfirmPassword)
                .ID("ConfirmPassword")
                .Mode(TextBoxMode.Password)
                .InputAttr("aria-label", "Password")
                .Placeholder("重複輸入新密碼")
                .ShowClearButton(true)
                .Buttons(buttons =>
                {
                    buttons.Add()
                    .Name("password")
                    .Location(TextEditorButtonLocation.After)
                    .Widget(w => w.Button()
                    .StylingMode(ButtonStylingMode.Text)
                    .Icon("eyeopen")
                    .OnClick("() => changePasswordMode('ConfirmPassword')"));
                }))
        </div>
    </div>
    <div class="dx-field">
        <div class="dx-field-value">
            @(Html.DevExtreme().Button()
                .Text("確定")
                .Type(ButtonType.Success)
                .UseSubmitBehavior(true)
                )
        </div>
    </div>
}

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success" role="alert">
        @TempData["SuccessMessage"]
    </div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger" role="alert">
        @TempData["ErrorMessage"]
    </div>
}

<script>
    function changePasswordMode(name) {
        let editor = $(`#${name}`).dxTextBox("instance");
        editor.option('mode', editor.option('mode') === 'text' ? 'password' : 'text');
    }
</script>
