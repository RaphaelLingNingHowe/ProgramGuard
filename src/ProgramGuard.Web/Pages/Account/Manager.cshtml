@page
@using ProgramGuard.Dtos.Account
@model ProgramGuard.Web.Pages.Account.AccountsModel
@{
    ViewData["Title"] = "Account";
}

<script src="~/js/pages/manager.js"></script>

<div id="container">
    @(Html.DevExtreme().Button()
        .Text("添加使用者")
        .OnClick("showPopup")
        .Type(ButtonType.Success)
        .ElementAttr(new { id = "changePasswordButton" })
        )

    <div id="container">
        @(Html.DevExtreme().Popup()
            .ID("addUserPopup")
            .Width(400)
            .Height(300)
            .ShowTitle(true)
            .Title("添加使用者")
            .DragEnabled(true)
            .OnHidden("addUserOnHidden")
            .HideOnOutsideClick(true)
            .ShowCloseButton(true)
            .Position(positionConfig => positionConfig
            .At(HorizontalAlignment.Center, VerticalAlignment.Center)
            .My(HorizontalAlignment.Center, VerticalAlignment.Center)
            )
            .ContentTemplate(@<text>
            @using (Html.BeginForm(FormMethod.Post))
            {
            @Html.AntiForgeryToken()
            <div class="dx-field">
                <div class="dx-field-label">賬號</div>
                <div class="dx-field-value">
                    @(Html.DevExtreme().TextBoxFor(m => m.createUserDto.UserName)
                    .ID("UserName")
                    .Placeholder("賬號")

                    )
                </div>
            </div>
            <div class="dx-field">
                <div class="dx-field-label">密碼</div>
                <div class="dx-field-value">
                    @(
                    Html.DevExtreme().TextBoxFor(m => m.createUserDto.Password)
                    .ID("Password")
                    .Mode(TextBoxMode.Password)
                    .InputAttr("aria-label", "Password")
                    .Placeholder("密碼")
                    .ShowClearButton(true)
                    .Buttons(buttons =>
                    {
                    buttons.Add()
                    .Name("password")
                    .Location(TextEditorButtonLocation.After)
                    .Widget(w => w.Button()
                    .StylingMode(ButtonStylingMode.Text)
                    .Icon("eyeopen")
                    .OnClick("() => changePasswordMode('Password')"));
                    }))
                </div>
            </div>
            <div class="dx-field">
                <div class="dx-field-label">電子郵件</div>
                <div class="dx-field-value">
                    @(
                    Html.DevExtreme().TextBoxFor(m => m.createUserDto.Email)
                    .ID("Email")
                    .Mode(TextBoxMode.Email)
                    .InputAttr("aria-label", "Email")
                    .Placeholder("電子郵件")
                    .ShowClearButton(true)
                    )
                </div>
            </div>
            <div class="dx-field">
                <div class="dx-field-value">
                    @(Html.DevExtreme().Button()
                    .Text("確定")
                    .Type(ButtonType.Success)
                    .OnClick("addUser")
                    )
                </div>
            </div>
            }
        </text>)
            )
    </div>
</div>

<div id="gridContainer">
    @(
        Html.DevExtreme().DataGrid<GetUserDto>()
        .DataSource(o => o.RemoteController()
        .LoadUrl("Manager?Handler=Data")
        .InsertUrl("Manager")
        .UpdateUrl("Manager")
        .Key("UserId"))
        .Editing(e =>
                {
                    e.AllowUpdating(true);
                    e.Mode(GridEditMode.Batch);
                    e.UseIcons(true);
                })
        .Columns(columns =>
        {
            columns.AddFor(m => m.UserName).Caption("使用者").AllowEditing(false);
            columns.AddFor(m => m.LastLoginTime).Caption("上次登錄時間").Format("yyyy-MM-dd HH:mm:ss").AllowEditing(false);
            columns.AddFor(m => m.LockoutEnd).Caption("解鎖時間").Format("yyyy-MM-dd HH:mm:ss").AllowEditing(false);
            columns.AddFor(m => m.IsFrozen).Caption("凍結賬號");
            columns.AddFor(m => m.IsAdmin).Caption("管理員權限");
        })
        .ShowBorders(true)
        .ColumnAutoWidth(true)
        .Selection(o => o.Mode(SelectionMode.Single))
        .NoDataText("沒有資料")
        .HoverStateEnabled(true)
        .FocusedRowEnabled(true)
        .Paging(paging => paging.PageSize(15))
        .Pager(pager =>
        {
            pager.Visible(true);
            pager.DisplayMode(GridPagerDisplayMode.Full);
            pager.ShowPageSizeSelector(true);
            pager.AllowedPageSizes(new JS("[15, 30, 50, 100, 200]"));
            pager.ShowInfo(true);
            pager.ShowNavigationButtons(true);
        })
        )
</div>

