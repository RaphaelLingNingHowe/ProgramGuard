@page
@using ProgramGuard.Dtos.User
@model ProgramGuard.Web.Pages.Account.ChangePasswordModel

@Html.AntiForgeryToken()

<div id="container">

    @(Html.DevExtreme().Popup()
        .ID("changePasswordPopup")
        .Width(400)
        .Height(300)
        .ShowTitle(true)
        .Title("更換密碼")
        .DragEnabled(true)
        .HideOnOutsideClick(true)
        .ShowCloseButton(true)
        .Position(positionConfig => positionConfig
        .At(HorizontalAlignment.Center, VerticalAlignment.Center)
        .My(HorizontalAlignment.Center, VerticalAlignment.Center)
        )
        .ContentTemplate(@<text>
        <div class="dx-field">
            <div class="dx-field-label">密碼</div>
            <div class="dx-field-value">
                @(
                Html.DevExtreme().TextBoxFor(m => m.changePasswordDto.CurrentPassword)
                .ID("CurrentPassword")
                .Mode(TextBoxMode.Password)
                .InputAttr("aria-label", "Password")
                .Placeholder("現在使用的密碼")
                .ShowClearButton(true)
                .Buttons(buttons =>
                {
                buttons.Add()
                .Name("password")
                .Location(TextEditorButtonLocation.After)
                .Widget(w => w.Button()
                .StylingMode(ButtonStylingMode.Text)
                .Icon("eyeopen")
                .OnClick("() => changePasswordMode('CurrentPassword')"));
                }))
            </div>
        </div>
        <div class="dx-field">
            <div class="dx-field-label">新密碼</div>
            <div class="dx-field-value">
                @(
                Html.DevExtreme().TextBoxFor(m => m.changePasswordDto.NewPassword)
                .ID("NewPassword")
                .Mode(TextBoxMode.Password)
                .InputAttr("aria-label", "Password")
                .Placeholder("新密碼")
                .ShowClearButton(true)
                .Buttons(buttons =>
                {
                buttons.Add()
                .Name("password")
                .Location(TextEditorButtonLocation.After)
                .Widget(w => w.Button()
                .StylingMode(ButtonStylingMode.Text)
                .Icon("eyeopen")
                .OnClick("() => changePasswordMode('NewPassword')"));
                }))
            </div>
        </div>
        <div class="dx-field">
            <div class="dx-field-label">確認新密碼</div>
            <div class="dx-field-value">
                @(
                Html.DevExtreme().TextBoxFor(m => m.changePasswordDto.ConfirmPassword)
                .ID("ConfirmPassword")
                .Mode(TextBoxMode.Password)
                .InputAttr("aria-label", "Password")
                .Placeholder("重複輸入新密碼")
                .ShowClearButton(true)
                .Buttons(buttons =>
                {
                buttons.Add()
                .Name("password")
                .Location(TextEditorButtonLocation.After)
                .Widget(w => w.Button()
                .StylingMode(ButtonStylingMode.Text)
                .Icon("eyeopen")
                .OnClick("() => changePasswordMode('ConfirmPassword')"));
                }))
            </div>
        </div>
        <div class="dx-field">
            <div class="dx-field-value">
                @(Html.DevExtreme().Button()
                .Text("確定")
                .Type(ButtonType.Success)
                .OnClick("changePassword")
                )
            </div>
        </div>
    </text>)
        )
</div>
